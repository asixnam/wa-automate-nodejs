"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6155],{7237:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"how-to/location","title":"Location","description":"Sending Location","source":"@site/docs/how-to/location.md","sourceDirName":"how-to","slug":"/how-to/location","permalink":"/docs/how-to/location","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/how-to/location.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Handle Incoming Call","permalink":"/docs/how-to/incoming-calls"},"next":{"title":"Manage Participants","permalink":"/docs/how-to/manage-participants"}}');var i=t(4848),a=t(8453);const c={},s="Location",l={},r=[{value:"Sending Location",id:"sending-location",level:2},{value:"Receiving Location",id:"receiving-location",level:2},{value:"Listening to Live Locations",id:"listening-to-live-locations",level:2},{value:"Forcing Live Locations to Update",id:"forcing-live-locations-to-update",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"location",children:"Location"})}),"\n",(0,i.jsx)(n.h2,{id:"sending-location",children:"Sending Location"}),"\n",(0,i.jsx)(n.p,{children:"[[sendLocation]]"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"    client.sendLocation(chatId, latitude, longitude, 'London!')\n"})}),"\n",(0,i.jsx)(n.h2,{id:"receiving-location",children:"Receiving Location"}),"\n",(0,i.jsx)(n.p,{children:"Check the [[Message]] reference to learn how to extract the coordinates from a location message"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'    client.onMessage(message=> {\n        if(message.type==="location") {\n            //Using destructuring\n            const {\n                // The text associated with the location\n                loc,\n                //Latitude\n                lat,\n                //Longitude\n                lng\n            } = message\n        }\n    })\n'})}),"\n",(0,i.jsx)(n.h2,{id:"listening-to-live-locations",children:"Listening to Live Locations"}),"\n",(0,i.jsx)(n.p,{children:"[[onLiveLocation]] fires a [[LiveLocationChangedEvent]] event. [[onLiveLocation]] requires a chat id to listen to so you need to detect exactly when a chat starts sharing a live location with your host account. This example detects when a live location is started and then registers a new callback to listen to updates in that live location session."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"    const liveLocationCallback = currentLiveLocation => {\n        console.log('Live location update', currentLiveLocation.id, currentLiveLocation.lat, currentLiveLocation.lng);\n    }\n    client.onMessage(message=> {\n        //This is how to detect when someone has started a live location with you\n        if(message.shareDuration){\n            client.onLiveLocation(message.from, liveLocationCallback)\n        }\n    })\n\n"})}),"\n",(0,i.jsx)(n.h3,{id:"forcing-live-locations-to-update",children:"Forcing Live Locations to Update"}),"\n",(0,i.jsx)(n.p,{children:"The updates of live locations are very passive. If you require updates at regular intervals then you can force it using [[forceUpdateLiveLocation]]. It is recomended to keep an array of chat ids that have live location sessions and map through them at regular intervals"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"    await client.forceUpdateLiveLocation(chatId);\n\n    //or force update live locations of multiple chats\n    await Promise.all([\n        'chatId1',\n        'chatId2'\n    ].map(client.forceUpdateLiveLocation));\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>s});var o=t(6540);const i={},a=o.createContext(i);function c(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);