"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2987],{3513:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"get-started/socketmode","title":"Socket Mode","description":"Learn how to use Socket Mode to develop WhatsApp automation solutions with enhanced flexibility and development experience.","source":"@site/docs/get-started/socketmode.md","sourceDirName":"get-started","slug":"/get-started/socketmode","permalink":"/docs/get-started/socketmode","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/get-started/socketmode.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Socket Mode","sidebar_position":4,"description":"Learn how to use Socket Mode to develop WhatsApp automation solutions with enhanced flexibility and development experience."},"sidebar":"tutorialSidebar","previous":{"title":"Link Code Login","permalink":"/docs/get-started/link-code"},"next":{"title":"The Config Object","permalink":"/docs/configuration/config-object"}}');var s=t(4848),i=t(8453);const r={title:"Socket Mode",sidebar_position:4,description:"Learn how to use Socket Mode to develop WhatsApp automation solutions with enhanced flexibility and development experience."},c="Socket Mode",a={},l=[{value:"Getting Started",id:"getting-started",level:2},{value:"Step 1: Start the EASY API in Socket Mode",id:"step-1-start-the-easy-api-in-socket-mode",level:3},{value:"Step 2: Connect Your Application",id:"step-2-connect-your-application",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Common Issues and Solutions",id:"common-issues-and-solutions",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"socket-mode",children:"Socket Mode"})}),"\n",(0,s.jsx)(n.p,{children:"Socket Mode is a powerful feature that allows you to separate your WhatsApp session from your application code. This separation provides several significant benefits:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Distributed Architecture"}),": Run your WhatsApp session and application code on different servers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rapid Development"}),": Make code changes without waiting for WhatsApp session restarts"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multi-Client Support"}),": Connect multiple socket clients to a single WhatsApp session"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Enhanced Reliability"}),": Session persistence even if your application code crashes"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,s.jsx)(n.h3,{id:"step-1-start-the-easy-api-in-socket-mode",children:"Step 1: Start the EASY API in Socket Mode"}),"\n",(0,s.jsx)(n.p,{children:"Run the following command to start the EASY API with socket mode enabled:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npx @open-wa/wa-automate --socket -p 8002 -k your_api_key\n"})}),"\n",(0,s.jsx)(n.p,{children:"Important parameters:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--socket"}),": Required flag to enable socket mode"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-p 8002"}),": Port number for the socket server (can be customized)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-k your_api_key"}),": Your API key for authentication"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"step-2-connect-your-application",children:"Step 2: Connect Your Application"}),"\n",(0,s.jsx)(n.p,{children:"Here's an example showing how to connect to the socket server and interact with WhatsApp:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import {\n    Client,\n    SocketClient,\n} from "@open-wa/wa-automate-socket-client";\n\nconst RECIPIENT = \'PHONE_NUMBER@c.us\'; // Format: country code + phone number\n\nasync function start() {\n    // Connect to the socket server\n    const client = await SocketClient.connect(\n        "http://localhost:8002",\n        "your_api_key"\n    ) as SocketClient & Client;\n\n    // Log the socket connection ID\n    console.log("Socket Connected! ID:", client.socket.id);\n\n    // Listen for incoming messages\n    client.onAnyMessage((message) => {\n        console.log("New Message:", {\n            messageId: message.id,\n            content: message.body,\n            sender: message.sender.id\n        });\n    });\n\n    // Example: Sending different types of messages\n    \n    // Send text message\n    const textMsg = await client.sendText(RECIPIENT, "Hello from Socket Mode!");\n    console.log("Text message sent:", textMsg);\n\n    // Send audio file\n    const audioMsg = await client.sendAudio(\n        RECIPIENT,\n        "https://example.com/audio.mp3"\n    );\n    console.log("Audio message sent:", audioMsg);\n\n    // Send video file with caption\n    const videoMsg = await client.sendFile(\n        RECIPIENT,\n        "https://example.com/video.mp4",\n        "video.mp4",\n        "Check out this video!"\n    );\n    console.log("Video message sent:", videoMsg);\n}\n\nstart().catch(console.error);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.p,{children:"Always implement proper error handling in your socket client:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"client.socket.on('error', (error) => {\n    console.error('Socket Error:', error);\n});\n\nclient.socket.on('disconnect', (reason) => {\n    console.log('Socket Disconnected:', reason);\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"API Key Security"}),": Never hardcode your API key in the source code. Use environment variables instead."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reconnection Logic"}),": Implement automatic reconnection logic for production environments."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Event Handling"}),": Set up proper event handlers for all relevant WhatsApp events you need to monitor."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Resource Cleanup"}),": Properly close socket connections when your application shuts down."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"common-issues-and-solutions",children:"Common Issues and Solutions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If you can't connect, verify that the EASY API is running and the port is accessible"}),"\n",(0,s.jsx)(n.li,{children:"Ensure your API key matches between the server and client"}),"\n",(0,s.jsx)(n.li,{children:"Check network firewall settings if running on different machines"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For more advanced usage and complete API reference, visit our ",(0,s.jsx)(n.a,{href:"/api-reference",children:"API Documentation"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var o=t(6540);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);