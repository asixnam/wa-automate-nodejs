"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[487],{8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var r=n(6540);const o={},a=r.createContext(o);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:t},e.children)}},9570:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"configuration/capture-qr","title":"Capturing QR Code","description":"An event is emitted every time the QR code is received by the system. You can grab hold of this event emitter by importing ev. You can capture this qr code and save it to a file.","source":"@site/docs/configuration/capture-qr.md","sourceDirName":"configuration","slug":"/configuration/capture-qr","permalink":"/docs/configuration/capture-qr","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/configuration/capture-qr.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"The Client","permalink":"/docs/configuration/the-client"},"next":{"title":"Capturing the session data","permalink":"/docs/configuration/capture-sd"}}');var o=n(4848),a=n(8453);const i={},c="Capturing QR Code",s={},d=[];function u(e){const t={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"capturing-qr-code",children:"Capturing QR Code"})}),"\n",(0,o.jsxs)(t.p,{children:["An event is emitted every time the QR code is received by the system. You can grab hold of this event emitter by importing ",(0,o.jsx)(t.a,{href:"/TODO",children:(0,o.jsx)(t.code,{children:"ev"})}),". You can capture this qr code and save it to a file."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",children:"import { ev } from '@open-wa/wa-automate';\nconst fs = require('fs');\n\nev.on('qr.**', async qrcode => {\n  //qrcode is base64 encoded qr code image\n  //now you can do whatever you want with it\n  const imageBuffer = Buffer.from(\n    qrcode.replace('data:image/png;base64,', ''),\n    'base64'\n  );\n  fs.writeFileSync('qr_code.png', imageBuffer);\n});\n"})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}}}]);