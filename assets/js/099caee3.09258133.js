"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4508],{5062:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"reference/api/model/aliases/type-aliases/DataURL","title":"Type Alias: DataURL","description":"DataURL: Brand\\\\","source":"@site/docs/reference/api/model/aliases/type-aliases/DataURL.md","sourceDirName":"reference/api/model/aliases/type-aliases","slug":"/reference/api/model/aliases/type-aliases/DataURL","permalink":"/docs/reference/api/model/aliases/type-aliases/DataURL","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/api/model/aliases/type-aliases/DataURL.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Type Alias: CountryCode","permalink":"/docs/reference/api/model/aliases/type-aliases/CountryCode"},"next":{"title":"Type Alias: FilePath","permalink":"/docs/reference/api/model/aliases/type-aliases/FilePath"}}');var n=t(4848),r=t(8453);const o={},i="Type Alias: DataURL",l={},c=[];function d(e){const a={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.header,{children:(0,n.jsx)(a.h1,{id:"type-alias-dataurl",children:"Type Alias: DataURL"})}),"\n",(0,n.jsxs)(a.blockquote,{children:["\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.strong,{children:"DataURL"}),": ",(0,n.jsx)(a.code,{children:"Brand"}),"<`data:${string};base64,${Base64}`, ",(0,n.jsx)(a.code,{children:'"DataURL"'}),">"]}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:'Data URLs, URLs prefixed with the data: scheme, allow content creators to embed small files inline in documents. They were formerly known as "data URIs" until that name was retired by the WHATWG.'}),"\n",(0,n.jsx)(a.p,{children:"Data URLs are composed of four parts: a prefix (data:), a MIME type indicating the type of data, an optional base64 token if non-textual, and the data itself:"}),"\n",(0,n.jsxs)(a.p,{children:["Example:\n",(0,n.jsx)(a.code,{children:'"data:[<mediatype>][;base64],<data>"'})]}),"\n",(0,n.jsxs)(a.p,{children:["Learn more here: ",(0,n.jsx)(a.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs",children:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs"})]})]})}function p(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,a,t)=>{t.d(a,{R:()=>o,x:()=>i});var s=t(6540);const n={},r=s.createContext(n);function o(e){const a=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(r.Provider,{value:a},e.children)}}}]);