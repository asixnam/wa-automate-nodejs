"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5626],{494:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"reference/logging/logging/variables/log","title":"Variable: log","description":"const log: Logger","source":"@site/docs/reference/logging/logging/variables/log.md","sourceDirName":"reference/logging/logging/variables","slug":"/reference/logging/logging/variables/log","permalink":"/docs/reference/logging/logging/variables/log","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/logging/logging/variables/log.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Type Alias: ConfigLogTransport","permalink":"/docs/reference/logging/logging/type-aliases/ConfigLogTransport"},"next":{"title":"structures/Collector","permalink":"/docs/reference/structures/Collector/"}}');var t=o(4848),s=o(8453);const i={},a="Variable: log",c={},l=[];function g(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"variable-log",children:"Variable: log"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"const"})," ",(0,t.jsx)(n.strong,{children:"log"}),": ",(0,t.jsx)(n.code,{children:"Logger"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["You can access the log in your code and add your own custom transports\n",(0,t.jsx)(n.a,{href:"https://github.com/winstonjs/winston#transports",children:"https://github.com/winstonjs/winston#transports"}),"\nsee ",(0,t.jsx)(n.a,{href:"https://github.com/winstonjs/winston#transports",children:"Logger"})," for more details."]}),"\n",(0,t.jsx)(n.p,{children:"Here is an example of adding the GCP stackdriver transport:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"import { log } from '@open-wa/wa-automate'\nimport { LoggingWinston } from '@google-cloud/logging-winston';\n\nconst gcpTransport = new LoggingWinston({\n    projectId: 'your-project-id',\n    keyFilename: '/path/to/keyfile.json'\n  });\n\n...\nlog.add(\n gcpTransport\n)\n\n//Congrats! Now all of your session logs will also go to GCP Stackdriver\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(g,{...e})}):g(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var r=o(6540);const t={},s=r.createContext(t);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);